<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <title>Home - Painel do Cliente</title>
  <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
  <style>
    * {
      box-sizing: border-box;
      font-family: 'Inter', sans-serif;
    }

    body {
      margin: 0;
      padding: 0;
      background: #0d1117;
      color: #f0f6fc;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }

    .dashboard {
      background: #161b22;
      padding: 50px 40px;
      border-radius: 16px;
      box-shadow: 0 0 40px rgba(0, 255, 170, 0.05);
      width: 100%;
      max-width: 750px;
    }

    h2 {
      text-align: center;
      font-size: 26px;
      margin-bottom: 35px;
      color: #e6edf3;
    }

    .account {
      background: #1f242c;
      border-left: 6px solid #00ffa8;
      padding: 20px 25px;
      border-radius: 12px;
      margin-bottom: 20px;
      transition: all 0.3s ease;
    }

    .account.inactive {
      border-color: crimson;
      opacity: 0.8;
    }

    .account h3 {
      margin: 0 0 10px;
      font-size: 18px;
      color: #ffffff;
    }

    .account p {
      margin: 6px 0;
      color: #b1b9c1;
      font-size: 15px;
    }

    .account span {
      font-weight: 600;
    }

    .buttons {
      display: flex;
      flex-wrap: wrap;
      gap: 12px;
      justify-content: center;
      margin-top: 30px;
    }

    a.button {
      background: linear-gradient(90deg, #00ffa8, #00cc88);
      color: #0d1117;
      padding: 12px 24px;
      border-radius: 10px;
      font-weight: bold;
      text-decoration: none;
      transition: transform 0.2s ease, box-shadow 0.2s ease;
      box-shadow: 0 4px 12px rgba(0,0,0,0.2);
    }

    a.button:hover {
      transform: translateY(-2px);
      box-shadow: 0 0 10px rgba(0, 255, 170, 0.3);
    }

    .empty-message {
      text-align: center;
      font-size: 16px;
      color: #8b949e;
      margin-top: 10px;
    }

    .logout {
      display: block;
      margin-top: 35px;
      text-align: center;
      color: #ff6b6b;
      font-weight: 600;
      text-decoration: none;
      font-size: 15px;
      transition: color 0.3s;
    }

    .logout:hover {
      color: #ff3b3b;
    }
  </style>
</head>
<body>

<div id="app" class="dashboard">
  <h2 v-if="client">Bem-vindo, {{ client.name }}</h2>

  <template v-if="accounts.length > 0">
    <div
      v-for="account in accounts"
      :key="account.id"
      class="account"
      :class="{ inactive: !account.active }"
    >
      <h3>Conta {{ account.type }}</h3>
      <p><strong>Saldo:</strong> R$ {{ account.balance.toFixed(2) }}</p>
      <p><strong>Status: </strong>
        <span :style="{ color: account.active ? '#00ffa8' : 'crimson' }">
          {{ account.active ? 'Ativa' : 'Inativa' }}
        </span>
      </p>
    </div>

    <div class="buttons">
      <a href="/transactions" class="button">Transações</a>
      <a href="/transfers" class="button">Transferências</a>
      <a href="/transactions/extracts" class="button">Extratos</a>
      <a v-if="accounts.length === 1" href="/accounts/create" class="button">Nova Conta</a>
    </div>
  </template>

  <template v-else>
    <p class="empty-message">Você ainda não possui nenhuma conta ativa.</p>
    <div class="buttons">
      <a href="/accounts/create" class="button">Abrir Conta</a>
    </div>
  </template>

  <a href="/logout" class="logout">Sair</a>
</div>

<script>
  const { createApp } = Vue;

  createApp({
    data() {
      return {
        client: null,
        accounts: []
      }
    },
    methods: {
      async fetchClientData() {
        try {
          const response = await fetch('/clients/home');
          const data = await response.json();

          if (!response.ok || !data.client) {
            alert(data.error || 'Erro ao carregar dados');
            window.location.replace('/clients/login');
            return;
          }

          this.client = data.client;
          this.accounts = data.accounts || [];
        } catch (err) {
          alert('Erro ao carregar dados');
          window.location.replace('/clients/login');
        }
      }
    },
    mounted() {
      this.fetchClientData();
    }
  }).mount('#app');
</script>

</body>
</html>
